{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Documents\\\\Code\\\\\\u041A\\u0443\\u0440\\u0441 Python \\u0432 SkillFactory\\\\\\u041F\\u0440\\u043E\\u044D\\u043A\\u0442\\u044B \\u0441 \\u043A\\u043E\\u0434\\u0430\\u043C\\u0438\\\\mini_twitter_project\\\\twitter_project\\\\front\\\\src\\\\Posts.js\";\nimport React, { Component } from \"react\";\nimport PostService from \"./PostService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst postService = new PostService();\nexport default class Posts extends Component {\n  // прописываем основной конструктор\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      // сюда загружаем посты, поэтому изначально тут пуста\n      inputValue: '' // сюда будем воодить новые посты\n\n    };\n    this.handleChange = this.handleChange.bind(this); // событие, когда изменили поле ввода\n\n    this.handleSubmit = this.handleSubmit.bind(this); // событие, когда мы нажимаем на кнопку отправить пост\n  }\n\n  handleChange(event) {\n    this.setState({\n      inputValue: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    postService.createPost({\n      'text': this.state.inputValue\n    });\n    this.getData();\n    this.setState({\n      inputValue: ''\n    });\n  } // прописываем то, как мы будем получать данные с сервера и сразу функцию загрузки данных\n  // загружаем базу\n\n\n  getData() {\n    postService.getPost().then(result => {\n      this.setState({\n        data: result.data\n      });\n    });\n  } // после загрузки, выполняем её\n\n\n  componentDidMount() {\n    this.getData();\n  } // делаем функцию для лайков\n\n\n  setLike(post) {\n    postService.setLikePost(post.id);\n    post.likeCount += 1;\n    this.forceUpdate();\n  } // Циклично загружаем все посты, попутно добавляя функции по нажатию кнопок Like, \n  // передавая в качестве аргумента итерируемый объект post. Еще сразу добавляем прописанные события по вводу нового поста\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"posts\",\n      children: [this.state.data.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: 'post_' + post.id,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setLike(post),\n          children: [\" \", post.likesCount, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date : \", post.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.inputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleSubmit,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","PostService","postService","Posts","constructor","props","state","data","inputValue","handleChange","bind","handleSubmit","event","setState","target","value","createPost","getData","getPost","then","result","componentDidMount","setLike","post","setLikePost","id","likeCount","forceUpdate","render","map","text","likesCount","date"],"sources":["C:/Users/anton/Documents/Code/Курс Python в SkillFactory/Проэкты с кодами/mini_twitter_project/twitter_project/front/src/Posts.js"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport PostService from \"./PostService\";\r\n\r\nconst postService = new PostService();\r\n\r\nexport default class Posts extends Component {\r\n\r\n    // прописываем основной конструктор\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data : [], // сюда загружаем посты, поэтому изначально тут пуста\r\n            inputValue: ''  // сюда будем воодить новые посты\r\n        }\r\n        this.handleChange = this.handleChange.bind(this); // событие, когда изменили поле ввода\r\n        this.handleSubmit = this.handleSubmit.bind(this); // событие, когда мы нажимаем на кнопку отправить пост\r\n    }\r\n\r\n    handleChange(event) {\r\n    \tthis.setState({inputValue: event.target.value});\r\n\t}\r\n\r\n\thandleSubmit(event) {\r\n    \tpostService.createPost({'text' : this.state.inputValue});\r\n    \tthis.getData()\r\n    \tthis.setState({inputValue : ''})\r\n\t}\r\n\r\n    // прописываем то, как мы будем получать данные с сервера и сразу функцию загрузки данных\r\n    // загружаем базу\r\n    getData(){\r\n        postService.getPost().then(result => {\r\n            this.setState({data: result.data})\r\n        })\r\n    }\r\n\r\n    // после загрузки, выполняем её\r\n    componentDidMount(){\r\n        this.getData()\r\n    }\r\n\r\n    // делаем функцию для лайков\r\n    setLike(post) {\r\n        postService.setLikePost(post.id)\r\n        post.likeCount += 1\r\n        this.forceUpdate()\r\n    }\r\n\r\n    // Циклично загружаем все посты, попутно добавляя функции по нажатию кнопок Like, \r\n    // передавая в качестве аргумента итерируемый объект post. Еще сразу добавляем прописанные события по вводу нового поста\r\n    render(){\r\n        return(\r\n            <div id='posts'>\r\n                {this.state.data.map(post=>\r\n                    <div id = {'post_' + post.id}>\r\n                        <p>{post.text}</p>\r\n                        <button onClick={() => this.setLike(post)}> {post.likesCount} </button>\r\n                        <p>Date : {post.date}</p>\r\n                        <hr/>\r\n                    </div>\r\n                )}\r\n                <input type='text' onChange={this.handleChange} value={this.state.inputValue}></input>\r\n                <button onClick = {this.handleSubmit}>Send</button>\r\n            </div>\r\n        )\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,WAAW,GAAG,IAAID,WAAJ,EAApB;AAEA,eAAe,MAAME,KAAN,SAAoBH,SAApB,CAA8B;EAEzC;EACAI,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACTC,IAAI,EAAG,EADE;MACE;MACXC,UAAU,EAAE,EAFH,CAEO;;IAFP,CAAb;IAIA,KAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB,CANe,CAMmC;;IAClD,KAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB,CAPe,CAOmC;EACrD;;EAEDD,YAAY,CAACG,KAAD,EAAQ;IACnB,KAAKC,QAAL,CAAc;MAACL,UAAU,EAAEI,KAAK,CAACE,MAAN,CAAaC;IAA1B,CAAd;EACH;;EAEDJ,YAAY,CAACC,KAAD,EAAQ;IAChBV,WAAW,CAACc,UAAZ,CAAuB;MAAC,QAAS,KAAKV,KAAL,CAAWE;IAArB,CAAvB;IACA,KAAKS,OAAL;IACA,KAAKJ,QAAL,CAAc;MAACL,UAAU,EAAG;IAAd,CAAd;EACH,CArB2C,CAuBzC;EACA;;;EACAS,OAAO,GAAE;IACLf,WAAW,CAACgB,OAAZ,GAAsBC,IAAtB,CAA2BC,MAAM,IAAI;MACjC,KAAKP,QAAL,CAAc;QAACN,IAAI,EAAEa,MAAM,CAACb;MAAd,CAAd;IACH,CAFD;EAGH,CA7BwC,CA+BzC;;;EACAc,iBAAiB,GAAE;IACf,KAAKJ,OAAL;EACH,CAlCwC,CAoCzC;;;EACAK,OAAO,CAACC,IAAD,EAAO;IACVrB,WAAW,CAACsB,WAAZ,CAAwBD,IAAI,CAACE,EAA7B;IACAF,IAAI,CAACG,SAAL,IAAkB,CAAlB;IACA,KAAKC,WAAL;EACH,CAzCwC,CA2CzC;EACA;;;EACAC,MAAM,GAAE;IACJ,oBACI;MAAK,EAAE,EAAC,OAAR;MAAA,WACK,KAAKtB,KAAL,CAAWC,IAAX,CAAgBsB,GAAhB,CAAoBN,IAAI,iBACrB;QAAK,EAAE,EAAI,UAAUA,IAAI,CAACE,EAA1B;QAAA,wBACI;UAAA,UAAIF,IAAI,CAACO;QAAT;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,OAAO,EAAE,MAAM,KAAKR,OAAL,CAAaC,IAAb,CAAvB;UAAA,gBAA6CA,IAAI,CAACQ,UAAlD;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAA,sBAAWR,IAAI,CAACS,IAAhB;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ,eAII;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADH,CADL,eASI;QAAO,IAAI,EAAC,MAAZ;QAAmB,QAAQ,EAAE,KAAKvB,YAAlC;QAAgD,KAAK,EAAE,KAAKH,KAAL,CAAWE;MAAlE;QAAA;QAAA;QAAA;MAAA,QATJ,eAUI;QAAQ,OAAO,EAAI,KAAKG,YAAxB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAcH;;AA5DwC"},"metadata":{},"sourceType":"module"}